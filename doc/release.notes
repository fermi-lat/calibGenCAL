$ Header $
v0  creation of calibGenCAL package, add codes to generate calibration constants for CAL pedestal, slope and muon peak

v1 add codes to do the light taper study

v2 change calibration constants code: Change muon distribution fit function from landau to log normal. Add correlated pedestal finding method

v2r1 returned muon distribution fit from lognormal to landau.  made changes to get code to compile & run under windows/vc7.1.

v2r2 added ciFit app.  made sure that muonCalib could run w/ out specifying any histogram file.

v2r2p1 slight alterations to requirements file to aid compilation on linux (provided by heather).  also added std:: namespace in some places.

v2r2p2 updated more namespace specifiers in ciFit.cxx

v2r2p3 small bug fixes for Linux - use std where needed, removed dtor for base class, and modified enum usage

v2r3   created RootFileAnalysis class.  moved xml output code into muonCalib class.  updated xml output for better integration into the database

v2r3p1 minor updates.  mostly documentation.

v2r3p2 basically forgot to update this file in previous tags.

v2r3p3 ignore me

v2r3p4 changed .dtd path for nonlin file in ciFit application.

v2r4 updated ciFit application to use IFile .xml config file

v2r5 Initial I&T release version.  increased pedestal histogram limits, suppressed corrped, improved initial guess for muon peak, suppressed 2nd pass FITMUHIST, replace runMuonCalib w/ runMuonCalibChain

v2r5p1 updated doxygen.  removed runMuonCalibChain.cxx (was not removed before).

v3r0 New calibration types introduced.  MevPerDac/IntegralNonlinearity/New Asymetry.  old types no longer used.  muonCalib completely rewritten.

v3r0p1 Small code modifcations to get Linux build w/ no warnings

v3r0p2 Made slight changes to event & hit selection.  Separated some generic code into individual units.  Fixed xtal pitch error in config file.

v3r1 removed obsolete exes.  added env var expand to paths in config file.  dtd files are found automatically now.  fixed 'no mcTree found' bug d.smith.  ciFit no longer outputs spline points w/ adc vals which are too high.

v3r1p1 2nd attempt at removing obsolete files

v3r1p2 fixed single error msg in ciFit

v3r1p3 added logfile output to ciFit.  added CVS TAG & config file contents to top of logs. made all functions in CalDefs static.

v3r1p4 xml file format tweaked after testing against Gleam imports.  Improved pedestal fits.  default ciFit_options spline parms now matched to FM101 & not EM.

v3r2 genThodCI_XML added. Bad bug which mixed up all the int-nonlin splines fixed.  CalDefs upgraded from a group of simple functions to C++ classes.

v3r2p1 fixed BIG bug where the small diode MevPerDac values were all INVERTED!  added 'creator' field to xml output to go along w/ calCalib v2r2p1 update

v3r2p2 fixed bad format of in 'creator' field in xml file.  adc & dac were switched twice in muonCalib::intNonlin splines (output is same, but names are now correct).  runMuonCalib was looking for option filename w/ wrong case (ok in windows, but not in linux).

v3r2p3 just added quick fix to get it to build w/ gcc

v3r2p4 updated .cvsignore file

v3r3p1 added LEX8 adc2nrg (energy) output.  fixed bad pedestal fits in LEX1.  took 'creator' field out of xml cuz EM's not ready for it yet.  added better checks for proper trigger mode in data.

v3r3p2 forced floating point output to xml files to be fixed point.

v3r4 added new muTrigEff executable to find FLE thresholds for muons and charge injection

v3r4p1 made it build on linux

v3r4p2 added output of fit errors in runMuTrigEff

v3r4p3 added histogramming and excluding of outliers from charge injection peaks in runCIFit

v3r4p4 moved obsolete xml package dependency to xmlBase, updated some documentation

v3r5  added the output of fle/fhe bias file to runMuTrigEff, fixed the event numbering problem in runCIFit, added new application runMuThreshEvol to follow the evolution of fle thresholds in a long muon run

v3r5p1 requirements file wouldn't build to due to windows letting bad case in filename pass by.  wrong ifile.dtd path in front of xml files.  python files are now inluded in CVS package, but are not yet 'officially supported'.... soon they will be.

v3r5p3 use commonRootData namespace

v3r5p4 back out commonRootData namespace

v3r6   test version for multi tower.  applitions (except threshevol) now support processing of arbitrary single tower instead of always tower 0.  results can be merged for multi tower calibs

v3r6p1 warnings on linux compile fixed

v3r6p2 Indexing of CalDigiCol wasn't working for multitower.  switched to proper iterator, also switched to TClonesArray

v3r6p3 Added the options files (ciFit_option_badCalibGen and muonCalib_option_badcalibGen) to handle properly the charge injection calibrations (files produced by calibGen online suite) with incorrect calibGain for high energy diode. Modified names for bias and adc2nrg output files. Fixed the bug in defining the maximum non-saturated point in charge injection calibration. Improved the stability of thershold fit in runMuTrigEff by assigning very big error to the efficiency histogram bins with no events.

v3r6p4 Added optional disable grouping in ciFit (more elegant fix for the bad calib_gain).  fixed comments in the spline grouping portion of cifit.  

v3r6p5 Python merge scripts are now officially supported.

v3r6p6 Python script conveniences.  cmt setup now puts 'python/' subfolder in %PATH%.  Python merge scripts now accept common config file.  ****Merge.sh launcher scripts added for each merge tool.

v3r6p7 fixed ugly newlines in requirements which were causing cmt errors on windows.

v3r6p9 Fixed incorrect geometry constants which cause ~2% error in MevPerDAC.  tholdCIGen.py & DAC tools are now in beta mode will probably be deemed officially released in next tag.

v3r6p10 tholdCIgen now handles ULD files w/ incorrect pedestal subtraction (fits v1), lack of pedestal subtraction.  tholdCIGen supports override of snapshot file w/ fragments

v3r6p11 fixed 3 bugs in gen***settings.py tools.  JIRA CAL-10,CAL-11,CAL-12.  FLE & FHE max out @ 0x40, also 100 mev & 20 mev FLE settings roughly the same.  also LAC settings the same for all layers

v3r6p12 Corrected genLACsettings tool for thresholds < 2 MeV; uses approximation based on 2 MeV values.

v3r6p13 Use extrapolated LEX8 characterization values in tools where FLE threshold is in LEX1 range.

v3r6p14 ciFit & runMuTrigEff will now accept CI files w/ any multiple of nXtalsPerTower hits per event.  i.e. they accept parallel calibrations.  Also runMuTrigEff will intelligently skip the 'scan events' which are sometimes intersperved w/ data events, & can slightly mess up the event numbering & binning

v3r6p15 muonCalib calib now automatically removes outliers from asymetry data.  no more min/max asym cfg needed.  no more separated cfg for bad_calibGen.  also muon calib now theoretically accepts autoranging 4-range data.  before only accepted fixed-range 4-range data.

v3r7    runSuiteParallel script added which runs ciFit, muonCalib, muTrig, ***Merge.py, ***Validate.py on a full set of parallel calibration data.  Also the C++ applications now expand more environment variables in the config options file in order to support the runSuiteParallel script.

v3r7p1  runSuiteParallel script tested on linux.  now support setting mounCalib n_evt_asym & n_evt_mpd via environment variable

v3r7p2  little more tinkering to get it to work on linux

v3r7p4  small bug fix allows python scripts to use ULD characterization files v2+.  also made all linux launcher scripts have executable permissions

v3r7p5 fixed few bugs in runMuTrigEff to make it working properly with zero suppressed tracker triggered data collected with parallelized (multitower) muTrig 

-----------------------------------------------------------------------------------------------------------------------
v3r8 - dwood, fewtrell, strickman
-----------------------------------------------------------------------------------------------------------------------

- Added tools 'adc2nrgVal' and 'biasVal'; perform basic validation of intermediate calibration XML files
- Added utility 'adcplot' to generate ROOT plots of characterization data; requires a working PyROOT implementation
- Added tool 'adcsmooth' to handle clean-up of characterization data tables:
	* Remove sparse and dropout data points
	* Remove outlying data points
	* Perform linear extrapolation for FLE LEX8 characterization data; needed for higher FLE thresholds
	* Digital smoothing filter as final processing
- Removed linear FLE LEX8 extrapolation from genFLEsettings tool; this is now handled by adcsmooth as pre-processing
- For tool intNonlinMerge, added an error check when attempting to merge files with mismatched DAC arrays
- Added tool 'genGainSettings' for generating minimal snapshot fragments with just <config_0> elements
- For all genXXXsettings tools, the XML output no longer contains <LATdoc> elements; added annotation attributes to <configurations> element	
- added gensettings top-level scripts
- ciFit now outputs profile histogram of adc -vs- nth DAC setting.
- added TXT2XML scripts for asym, pedestal & mevperdac calibrations

------------------------------------------------------------------------------------------------------------------------
v3r8p1 - fewtrell
------------------------------------------------------------------------------------------------------------------------
- gensettings & build_gensettings_cfg tools are now 'officially' supported under linux 
        * specifically gensettings.py now generates sh script in parallel w/ bat file


-------------------------------------------------------------------------------------------------------------------------
v3r8p2 - fewtrell
-------------------------------------------------------------------------------------------------------------------------
- ciFit
        - extrapolate all ciFit splines to saturation point.
        - ciFit now generates graphs w/ clean adc -vs- dac input points overlayed w/ the output spline points.
- RootFileAnalysis
        - recon & mc trees are now optionally #defined.   default is disabled.
        - also 'cmt use' of reconRootData & commonRootData is also optional.
        - if you want to expand calibGenCAL to see recon & mc, you need to uncomment/#define this code back in.

--------------------------------------------------------------------------------------------------------------------------
v3r8p3 - fewtrell / dwood
--------------------------------------------------------------------------------------------------------------------------
python scripts now support new intNonlin format (calCalib_v2r3.dtd)
python 'gensettings' scripts now support linux

- unit_test 
        - set of cfg files for running full calibGenCAL suite on 8 tower calibration data 
        - environment is expected to be SLAC linux as data files are available via nfs
        - correct output is saved in unit_test/output
- adcsmooth.py 
        - fixed 'issue' w/ uld file version #'s.
- build_adcsmooth.py
        - now builds .sh file along w/ .bat file for linux support.
- build_gensettings.py
        - can find bias files w/out redundant CAL serial # in filename
- get_slac_calibdac.py 
        - retrieves pedestal files along w/ other files.
- tholdCIGen.py
        - now supports new intNonlin format

--------------------------------
v3r8p4 - fewtrell
python - fixed a few dos/unix newline screw ups that were breaking things
--------------------------------

-------------------------------
v3r8p5 - dwood
adcsmooth - lengthened lookback for fle2adc extrapolation.  this will work better w/ new sparser data.  avoids 'knee' in output curve
-------------------------------


--------------------------------------------------------------------------------------------------------------------------
v3r9 - dwood / fewtrell
--------------------------------------------------------------------------------------------------------------------------

XML parser - switched base XML parser from python standard (minidom) to PyXML pacakage (4DOM)
	* allows for DTD validation
	* DTD validation is now enabled for XML files required to have DTD information prefixed
	* DTD validation still disabled for XML files which have no DTD yet
	* better for quality control, but quite a bit slower

adcsmooth - numerous changes to work correctly with sparsely sampled characterization data
	* extrapolate data near the pedestal noise region; promotes sharp cutoff at low end of curves
	* LAC pedestal noise is zeroed out
	* smoothing filter does not run at endpoints of curves; promotes sharp cutoff
	* better extrapolation of FLE coarse range values past measurement range
	* special processing for ULD data to reconstruct saturation plateau with sparse data
	
charplot - new utility to plot raw and smoothed characterization data
	* mainly a tool to diagnose the output of adcsmooth
	
charVal - new validation application for characterization data XML files
	* will catch gross errors, but probably still needs work to improve validation criteria
	
dacVal - new validation application for DAC settings XML files
	* works backwards from DAC setttings to calculate threshold in energy units
	* requires a complete set of files to run
	* nothing yet for ULD
	
adc2nrgVal - fixed bug with ROOT output option

xxxXML2TXT.py - new scripts generate collumnar text files from offline Cal calibration files

dacDiff.py - generates per channel differences between any 2 cal dac settings snapshot files.

roothist2csv.py - generates collumnar text files from all histograms in ROOT file.

dumpROOTPlots.py - generates images files for all histograms & Canvases in ROOT file.

unit_test - now 2 tower instead of 8 to save processing time

runSuiteParallel.py - now supports commandline override of twr_id as well as each individual processing phase.  
                      allows work to be easily broken up into several threads w/ same cfg file.

C++ - TXT format output now supports new format used by python scripts. improved format includes tower information & contains all 4 asym types & both MeVPerDAC types into single file each.


--------------------
v3r9p1 fewtrell
--------------------
C++ apps now use TH1S instead of TH1F across board.  
- Results are the same & it saves memory
- future updates w/ 16 tower support will use a lot of memory so this is important step.

C++ apps now use float instead of double in most places.  the precision is not needed & it saves some memory, particularly in larger arrays.

All python scripts now have .bat & .sh shell launcher scripts.  All .sh scripts have executable bit set.

runSuiteParallel.py, gensettings.py, build_adcsmooth.py all generate appropriate validation outputs along w/ their primary output.


----------------------------------
v3r9p2 dwood/fewtrell
----------------------------------

For DAC settings XML file produced from genXXXsettings tools, modified the values of the <configuration> element
'hierarchy' and 'shape' attributes.  Hierarchy is set to the value '['GCCC','GCRC','GCFE','<dac_type>']' and shape
is set to the value '(8,2,12)'.

Added support to tools for handling LEX1 energy range FLE DAC characterization files.
Currently, a simple scale factor is used to convert to LEX8 ADC units and process
as before.

Better file type checking for files which use the ADC/DAC XML tables as input.

Muon asymmetry now smarter for cross diode asymmetry.  Uses average ratio of Large2Small diode signal instead of the slope.  This will make energy & position response @ 1 GeV +- 100 MeV better.

runCIFit can now process broadcast mode calibGen as well as the older, 1 column at a time method.


----------------------------------
v3r9p3 dwood/fewtrell
----------------------------------

uldVal: new application to validate ULD DAC settings XML files (from genULDsettings)

dacVal:
    - fixed report of FAILED tests
    - relaxed FHE error and warning limits

charVal:
    - added support for ULD characterization files
    - added check for incorrect pedestal subtraction
    - relaxed FHE and LAC error and warning limits

build_adcsmooth:
    - added call to charVal to do validation on ULD characterization files

gensettings:
    - added call to uldVal to do validation on ULD DAC settings files
    - fixed bug which put 'cp' instead of 'copy' in Windows BAT output files
    - made processing of muon gain FHE files optional; command line -m or --muon

build_tholdci_cfg:
    - make sure FHE threshold is properly converted from GeV to MeV

runSuiteParallel:
    - fixed undefined environment variable error
 

----------------------------------
v3r9p4 dwood
----------------------------------

* Added titles and axes labels to ROOT output graphs generated by plot and validation scripts

* genULDsettings - removed one DAC step safety margin; output margins are closer now to user requested value

* uldVal:
    - look at all energy ranges when comparing threshold to saturation level
    - add check to make sure (saturation - threshold) is not less than margin paramter
    
* tholdCIVal - removed check of FLE threshold verses LEX8 ULD value; not needed now that FLE data is LEX1

    

 
v3r9p5 fewtrell
- fixed bug introduced w/ broadcast mode in v3r9p

v3r9p6 fewtrel
- fixed stupid bug in MuonCalib::readAsymTXT(), probably introduced when I added tower info to output txt files in v3r9

v3r9p7 fewtrell
- (C++) changed 'delete' to 'delete[]' where appropriate
- added #include "TFile.h" to CfData.h which is needed in some places

v3r9p8 fewtrell
- documentation updates

--------------------------------------
v4r0 fewtrell
--------------------------------------
* C++ apps now process 16 towers in parallel
* Most C++ code moved to library & shared between apps
* huge MuonCalib class broken into several smaller, more modular classes in libcalibGenCAL
* old C++ apps replaced, new apps are:
	- genMuonPed.exe
	- genCIDAC2ADC.exe
	- genMuonAsym.exe
	- genMuonMPD.exe
	- runMuTrigEff.exe
* runSuiteParallel dropped as it is no longer needed
* python/cfg folder moved to top level as cfg files are shared by both C++ and python apps
* CalDefs, CalVec & CalArrray classes now imported from CalUtil v3r0 where they are shared w/ the Gaudi apps
* MuonPed & CIDAC2ADC now have adc histograms bins aligned to 0.5 instead of 0.0 eliminating bias since all inputs are integer.
* MuonMPD has slightly smarter track selection code
* MuTrigEff has slightly smarter MuonThreshold fitting code.
* C++ config files are now .ini format instead of .xml.  they are shorter & easier to edit and read.  in fact all the apps share the same cfg file.
* runMuThreshEvol.exe has been removed.


v4r0p1 chekhtman
- added new application emiAnal to process EMI test data

--------------------------------------
v4r1 dwood
--------------------------------------

* Added tool genFlightPed to provide flight software pedestal values taken
  from a CAL_Ped file
* Added tool genFlightGain to provide flight software simplfied gain values taken
  from a CAL_MuSlope file
* Added class calMuSlopeCalibXML to library module calCalibXML to handle reading
  and writing of CAL_MuSlope files
  

---------------------------------------
v4r2 fewtrell, dwood
----------------------------------------
- muTrig now works w/out CI input file.
- added muSlopeTXT2XML.py, muSlopeVal.py, adc2nrgTXT2XML.py
  handle...
      - offline muSlope calibration type
      - online adc2nrg calibration type
      - flight gain calibration type
  ... all basically the same thing
- added calCalibApplyRelgain.py: apply relgain factor to muSlope file
- added calFitsMerge.py: merge single tower relgain files
- C++ code now supports ROOT 5.10 (had to add libMinuit to linkopts)
- most C++ apps now stop at min entries per histogram instead of n events
- genMuonPed can use only periodic trigger.
- genMuonMPD & genMuonAsym will quietly skip events with 1 range readout.
- genMuonMPD regains adc2nrg output
- inlTXT2XML script added
- Put low level python modules in lib subdirectory; changed all scripts so that PYTHONPATH is set appropriately.

--------------------
v4r2p1  fewtrell
--------------------
- fixed bug in adc2nrgTXT2XML.py was writing out wrong ranges

--------------------
v4r2p2 fewtrell
--------------------
- small updates to TXT<->XML converters

--------------------
v4r2p3 fewtrell
--------------------
- added biasTXT2XML tool

-----------------------
v4r2p4 fewtrell, dwood
-----------------------
- updating for new filename conventions from online tests
- Added range information to ULD logging statements.
- Improved calADCFilter.__restore() method to deal with cases where data is all zero.


-----------------------
v4r3 dwood, fewtrell
-----------------------
- added new scripts pedDiff, mpdDiff, asymDiff, inlDiff
calibUtil/xml/calCalib_v2r3.dtd used throughout now for offline xml calibrations (instead of oldedr v2r2)
added scripts
- calibGain.py: handle txt files w/ HE calibGain Off/On ratio
- calibGainCoeff.py: extract HE calibGain ratio from intNonlin files
- asymApplyCalibGain.py: apply calibGain ratio to offline asymmetry calibrations
- mpdApplyCalibGain.py: apply cg ratio to offline mevPerDAC calibrations
- cidac2adc now runs on LE or HE only files, doesn't require both
- cidac2adc now generates pedestals by extrapolating from successor points (old pedestals were wrong)
- cidac2adc drops unused 'smoothing disabled' functionality for simplicities sake.
- muonAsym & muonMPD now cut out noise hits where there is signal only on one face (this usually indicates direct diode deposit)
- For validation programs added -r option to get default ROOT output file name; log files are atomatically generated with a default name even if the -L option is not given.
- Removed need for base snapshot file to get gain settings; replaced with new section in tholdci cfg file.
- Modified cfg input files to accept a single 16-tower trigger bias file; build_xxx_cfg scripts create new input format.
- Added ancillary info to output files. (data source filenames)



